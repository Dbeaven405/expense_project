{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drew\\\\Desktop\\\\Coding\\\\expense_report\\\\src\\\\Components\\\\Expenses\\\\ExpensesChart.jsx\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesChart = props => {\n  const chartData = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartData[expenseMonth].value += expense.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n};\n\n_c = ExpensesChart;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["React","Chart","ExpensesChart","props","chartData","label","value","expense","expenses","expenseMonth","date","getMonth","amount"],"sources":["C:/Users/drew/Desktop/Coding/expense_report/src/Components/Expenses/ExpensesChart.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\n\r\nconst ExpensesChart = props => {\r\n    const chartData = [\r\n        {label: 'Jan' , value: 0},\r\n        {label: 'Feb' , value: 0},\r\n        {label: 'Mar' , value: 0},\r\n        {label: 'Apr' , value: 0},\r\n        {label: 'May' , value: 0},\r\n        {label: 'Jun' , value: 0},\r\n        {label: 'Jul' , value: 0},\r\n        {label: 'Aug' , value: 0},\r\n        {label: 'Sep' , value: 0},\r\n        {label: 'Oct' , value: 0},\r\n        {label: 'Nov' , value: 0},\r\n        {label: 'Dec' , value: 0}\r\n    ]\r\n\r\n    for (const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartData[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart  dataPoints={chartData} />\r\n}\r\n\r\nexport default ExpensesChart;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAGA,MAAMC,aAAa,GAAGC,KAAK,IAAI;EAC3B,MAAMC,SAAS,GAAG,CACd;IAACC,KAAK,EAAE,KAAR;IAAgBC,KAAK,EAAE;EAAvB,CADc,EAEd;IAACD,KAAK,EAAE,KAAR;IAAgBC,KAAK,EAAE;EAAvB,CAFc,EAGd;IAACD,KAAK,EAAE,KAAR;IAAgBC,KAAK,EAAE;EAAvB,CAHc,EAId;IAACD,KAAK,EAAE,KAAR;IAAgBC,KAAK,EAAE;EAAvB,CAJc,EAKd;IAACD,KAAK,EAAE,KAAR;IAAgBC,KAAK,EAAE;EAAvB,CALc,EAMd;IAACD,KAAK,EAAE,KAAR;IAAgBC,KAAK,EAAE;EAAvB,CANc,EAOd;IAACD,KAAK,EAAE,KAAR;IAAgBC,KAAK,EAAE;EAAvB,CAPc,EAQd;IAACD,KAAK,EAAE,KAAR;IAAgBC,KAAK,EAAE;EAAvB,CARc,EASd;IAACD,KAAK,EAAE,KAAR;IAAgBC,KAAK,EAAE;EAAvB,CATc,EAUd;IAACD,KAAK,EAAE,KAAR;IAAgBC,KAAK,EAAE;EAAvB,CAVc,EAWd;IAACD,KAAK,EAAE,KAAR;IAAgBC,KAAK,EAAE;EAAvB,CAXc,EAYd;IAACD,KAAK,EAAE,KAAR;IAAgBC,KAAK,EAAE;EAAvB,CAZc,CAAlB;;EAeA,KAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,QAA5B,EAAqC;IACjC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAR,CAAaC,QAAb,EAArB;IACAP,SAAS,CAACK,YAAD,CAAT,CAAwBH,KAAxB,IAAiCC,OAAO,CAACK,MAAzC;EACH;;EAED,oBAAO,QAAC,KAAD;IAAQ,UAAU,EAAER;EAApB;IAAA;IAAA;IAAA;EAAA,QAAP;AACH,CAtBD;;KAAMF,a;AAwBN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}